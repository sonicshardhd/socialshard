[{"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\reportWebVitals.ts":"1","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\index.jsx":"2","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\App.jsx":"3","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\Navigation\\Navigation.jsx":"4","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\BreadcrumbComponent\\BreadcrumbComponent.jsx":"5","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\MainContent.jsx":"6","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\users-reducer.ts":"7","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\hoc\\WithSuspense\\withSuspense.js":"8","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Users\\Users.tsx":"9","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Users\\UsersContainer.tsx":"10","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\redux-store.ts":"11","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\user-profile-reducer.ts":"12","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\ProfileContainer.tsx":"13","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\api\\api.ts":"14","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\Profile.tsx":"15","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\ProfilePosts\\ProfilePosts.tsx":"16"},{"size":425,"mtime":1607281906907,"results":"17","hashOfConfig":"18"},{"size":639,"mtime":1608140343132,"results":"19","hashOfConfig":"18"},{"size":864,"mtime":1607450630921,"results":"20","hashOfConfig":"18"},{"size":1447,"mtime":1607450649790,"results":"21","hashOfConfig":"18"},{"size":404,"mtime":1607449211627,"results":"22","hashOfConfig":"18"},{"size":696,"mtime":1609099796228,"results":"23","hashOfConfig":"18"},{"size":5891,"mtime":1608673537409,"results":"24","hashOfConfig":"18"},{"size":271,"mtime":1607972229282,"results":"25","hashOfConfig":"18"},{"size":2929,"mtime":1608309698218,"results":"26","hashOfConfig":"18"},{"size":2853,"mtime":1608672315229,"results":"27","hashOfConfig":"18"},{"size":518,"mtime":1608237333852,"results":"28","hashOfConfig":"18"},{"size":3409,"mtime":1609707255274,"results":"29","hashOfConfig":"18"},{"size":1891,"mtime":1609707514109,"results":"30","hashOfConfig":"18"},{"size":1296,"mtime":1608673892045,"results":"31","hashOfConfig":"18"},{"size":2359,"mtime":1609707788024,"results":"32","hashOfConfig":"18"},{"size":1453,"mtime":1609707814496,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1woau7h",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\reportWebVitals.ts",[],["74","75"],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\index.jsx",[],["76","77"],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\App.jsx",[],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\Navigation\\Navigation.jsx",["78"],"import React, { useState } from 'react'\r\nimport classes from './Navigation.module.css'\r\nimport { Layout, Menu } from 'antd';\r\nimport { PicLeftOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navigation = props => {\r\n\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    const onCollapse = () => {\r\n        setCollapsed(collapsed => !collapsed)\r\n    }\r\n\r\n    return (\r\n        <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                    Sign In\r\n            </Menu.Item>\r\n                <SubMenu key=\"sub1\" icon={<PicLeftOutlined />} title=\"Navigation\">\r\n                        <Menu.Item key=\"2\">\r\n                            <NavLink to='/profile'>My Profile</NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\">\r\n                            <NavLink to='/messages'>Messages</NavLink>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"4\">\r\n                            <NavLink to='/users'>Users</NavLink>\r\n                        </Menu.Item>\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\BreadcrumbComponent\\BreadcrumbComponent.jsx",["79"],"import React from 'react'\r\nimport classes from './BreadcrumbComponent.module.css'\r\nimport { Breadcrumb } from 'antd';\r\n\r\n\r\nconst BreadcrumbComponent = props => {\r\n    return (\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>User</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n    )\r\n}\r\n\r\nexport default BreadcrumbComponent;","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\MainContent.jsx",["80"],"import React from 'react'\r\nimport classes from './MainContent.module.css'\r\nimport withSuspense from '../hoc/WithSuspense/withSuspense'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer.tsx'))\r\nconst ProfileContainer = React.lazy(() => import('./Profile/ProfileContainer'))\r\n\r\nconst MainContent = props => {\r\n    return (\r\n        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n            <Route path='/users' render={withSuspense(UsersContainer)} />\r\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent;","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\users-reducer.ts",["81"],"import { usersAPI } from '../api/api'\r\nimport { UserType } from '../types/types'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { AppStateType } from '../redux/redux-store'\r\n\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst IS_PAGE_FETCHING = 'IS_PAGE_FETCHING'\r\nconst IS_FOLLOW_FETCHING = 'IS_FOLLOW_FETCHING'\r\n\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    currentPage: 1,\r\n    pageSize: 8,\r\n    totalUsersCount: 0,\r\n    isPageFetching: false,\r\n    followingInProgress: [] as Array<number>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = SetUsersActionType | SetPageSizeActionType | SetCurrentPageActionType | SetTotalUsersCountActionType |\r\nFollowSuccessActionType | UnfollowSuccessActionType | TogglePageIsFetchingActionType | ToggleFollowIsFetchingActionType\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_PAGE_SIZE:\r\n            return {\r\n                ...state,\r\n                pageSize: action.pageSize\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case IS_PAGE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isPageFetching: action.isPageFetching\r\n            }\r\n        case IS_FOLLOW_FETCHING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowFetching\r\n                ? [...state.followingInProgress, action.userId]\r\n                : state.followingInProgress.filter(userId => userId != action.userId)\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<UserType>\r\n}\r\n\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\n\r\ntype SetPageSizeActionType = {\r\n    type: typeof SET_PAGE_SIZE\r\n    pageSize: number\r\n}\r\n\r\nexport const setPageSize = (pageSize: number): SetPageSizeActionType => ({type: SET_PAGE_SIZE, pageSize})\r\n\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    currentPage: number\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount: number\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\n\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\n\r\ntype TogglePageIsFetchingActionType = {\r\n    type: typeof IS_PAGE_FETCHING,\r\n    isPageFetching: boolean\r\n} \r\n\r\nexport const togglePageIsFetching = (isPageFetching: boolean): TogglePageIsFetchingActionType => ({type: IS_PAGE_FETCHING, isPageFetching})\r\n\r\ntype ToggleFollowIsFetchingActionType = {\r\n    type: typeof IS_FOLLOW_FETCHING,\r\n    isFollowFetching: boolean,\r\n    userId: number\r\n}\r\n\r\nexport const toggleFollowIsFetching = (isFollowFetching: boolean, userId: number): ToggleFollowIsFetchingActionType => \r\n({type: IS_FOLLOW_FETCHING, isFollowFetching, userId})\r\n\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number): ThunkType => async (dispatch, getState) => {\r\n\r\n    dispatch(togglePageIsFetching(true))\r\n    dispatch(setCurrentPage(currentPage))\r\n\r\n    let usersData = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(togglePageIsFetching(false))\r\n    dispatch(setUsers(usersData.items))\r\n    dispatch(setTotalUsersCount(usersData.totalCount))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => async (dispatch, getState) => {\r\n    dispatch(toggleFollowIsFetching(true, userId))\r\n\r\n    let followResponse = await usersAPI.follow(userId)\r\n    \r\n    if (!followResponse.resultCode) {\r\n        dispatch(followSuccess(userId))\r\n    }\r\n\r\n    dispatch(toggleFollowIsFetching(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch, getState) => {\r\n    dispatch(toggleFollowIsFetching(true, userId))\r\n\r\n    let unfollowResponse = await usersAPI.unfollow(userId)\r\n\r\n    if(!unfollowResponse.resultCode) {\r\n        dispatch(unfollowSuccess(userId))\r\n    }\r\n\r\n    dispatch(toggleFollowIsFetching(false, userId))\r\n}\r\n\r\nexport default usersReducer;","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\hoc\\WithSuspense\\withSuspense.js",[],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Users\\Users.tsx",["82","83"],"import React, { FC } from 'react'\r\nimport classes from './Users.module.css'\r\nimport { List, Card, Button, Space, Pagination } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../../types/types'\r\n\r\nconst { Meta } = Card;\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    currentPage: number\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n    setPageSize: (size: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nconst Users: FC<PropsType> = ({users, currentPage, pageSize, totalUsersCount, followingInProgress, \r\nsetPageSize, setCurrentPage, follow, unfollow}) => {\r\n\r\n    const onSetPage = (page: number): any => {\r\n        setCurrentPage(page)\r\n    }\r\n\r\n    const onSetPageSize = (current: number, size: number) => {\r\n        setPageSize(size)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Pagination style={{ margin: '16px 16px' }}\r\n                showQuickJumper\r\n                current={currentPage}\r\n                total={totalUsersCount}\r\n                showTotal={total => `Total ${total} items`}\r\n                pageSizeOptions={['8', '12', '16']} \r\n                onChange={onSetPage}\r\n                onShowSizeChange={onSetPageSize}/>\r\n            <List\r\n                grid={{ gutter: 16, column: 4 }}\r\n                dataSource={users}\r\n                renderItem={user => (\r\n                    <List.Item>\r\n                        <Card actions={[\r\n                            user.followed\r\n                            ? <Button type=\"primary\" \r\n                                      loading={followingInProgress.some(id => user.id === id)}\r\n                                      onClick={() => unfollow(user.id)}>Unfollow\r\n                              </Button>\r\n                            : <Button type=\"primary\" \r\n                                      loading={followingInProgress.some(id => user.id === id)}\r\n                                      onClick={() => follow(user.id)}>Follow\r\n                              </Button>,\r\n                            <Button type=\"primary\" loading={false}>\r\n                                <NavLink to={`/profile/${user.id}`}>Profile Page</NavLink>\r\n                            </Button>\r\n\r\n                        ]}\r\n                            hoverable\r\n                            style={{ width: 240 }}\r\n                            cover={<img alt=\"example\" src={user.photos.small || \"https://place-hold.it/300x200\"} />}\r\n                        >\r\n                            <Meta title={user.name} description={`Status: ${user.status || 'No status found'}`} />\r\n                            <p>No status found</p>\r\n                        </Card>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Users\\UsersContainer.tsx",["84"],"import React, { useEffect, FC } from 'react'\r\nimport Users from './Users'\r\nimport { connect } from 'react-redux'\r\nimport { requestUsers, setPageSize, setCurrentPage, follow, unfollow } from '../../../redux/users-reducer'\r\nimport { Spin } from 'antd';\r\nimport { UserType } from '../../../types/types'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    currentPage: number\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n    isPageFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    setPageSize: (pageSize: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\nconst UsersContainer: FC<PropsType> = ({users, currentPage, pageSize, totalUsersCount, followingInProgress, isPageFetching,\r\n    requestUsers, setPageSize, setCurrentPage, follow, unfollow}) => {\r\n\r\n    useEffect(() => {\r\n        requestUsers(currentPage, pageSize)\r\n    }, [currentPage, pageSize])\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isPageFetching\r\n            ? <Spin tip=\"Loading...\"><Users users={users}\r\n                    currentPage={currentPage}\r\n                    pageSize={pageSize}\r\n                    totalUsersCount={totalUsersCount}\r\n                    followingInProgress={followingInProgress}\r\n                    setPageSize={setPageSize}\r\n                    setCurrentPage={setCurrentPage}\r\n                    follow={follow}\r\n                    unfollow={unfollow}/>\r\n              </Spin>\r\n            :<Users users={users}\r\n                    currentPage={currentPage}\r\n                    pageSize={pageSize}\r\n                    totalUsersCount={totalUsersCount}\r\n                    followingInProgress={followingInProgress}\r\n                    setPageSize={setPageSize}\r\n                    setCurrentPage={setCurrentPage}\r\n                    follow={follow}\r\n                    unfollow={unfollow}/>\r\n\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: state.usersData.users,\r\n        currentPage: state.usersData.currentPage,\r\n        pageSize: state.usersData.pageSize,\r\n        totalUsersCount: state.usersData.totalUsersCount,\r\n        followingInProgress: state.usersData.followingInProgress,\r\n        isPageFetching: state.usersData.isPageFetching\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, \r\n    {requestUsers, setPageSize, setCurrentPage, follow, unfollow})(UsersContainer);","D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\redux-store.ts",[],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\redux\\user-profile-reducer.ts",[],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\ProfileContainer.tsx",["85"],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\api\\api.ts",[],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\Profile.tsx",["86"],"D:\\Front-EndDevelopment\\ReactProjects\\social\\src\\components\\MainContent\\Profile\\ProfilePosts\\ProfilePosts.tsx",["87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":82,"column":69,"nodeType":"99","messageId":"100","endLine":82,"endColumn":71},{"ruleId":"101","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":3,"column":30,"nodeType":"95","messageId":"96","endLine":3,"endColumn":35},{"ruleId":"103","severity":1,"message":"104","line":37,"column":8,"nodeType":"105","endLine":37,"endColumn":31,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":37,"column":8,"nodeType":"105","endLine":37,"endColumn":10,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"109","line":3,"column":45,"nodeType":"95","messageId":"96","endLine":3,"endColumn":57},{"ruleId":"101","severity":1,"message":"110","line":3,"column":19,"nodeType":"95","messageId":"96","endLine":3,"endColumn":26},{"ruleId":"101","severity":1,"message":"111","line":3,"column":34,"nodeType":"95","messageId":"96","endLine":3,"endColumn":40},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'Space' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestUsers'. Either include it or remove the dependency array. If 'requestUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["114"],"React Hook useEffect has missing dependencies: 'getUserProfile' and 'userIdFromURL'. Either include them or remove the dependency array. If 'getUserProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["115"],"'ContactsType' is defined but never used.","'Tooltip' is defined but never used.","'Avatar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [currentPage, pageSize, requestUsers]",{"range":"120","text":"121"},"Update the dependencies array to be: [getUserProfile, userIdFromURL]",{"range":"122","text":"123"},[1225,1248],"[currentPage, pageSize, requestUsers]",[1184,1186],"[getUserProfile, userIdFromURL]"]